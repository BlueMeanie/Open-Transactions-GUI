
Welcome to Open Transactions.


-------------------------------------------------------------------------


GETTING STARTED:

1) See LICENSE-AND-CREDITS file, which should be in the same
   folder as this README file. You agree to the terms.  

2) See INSTALL files (this folder) for instructions on building everything.
   There are versions for Android, Windows, and Mac/Linux/FreeBSD.

   For most users, you can choose your makefile:
   make -f Makefile.darwin
   make -f Makefile.freebsd
   make -f Makefile.linux

3) While the Open Transactions library itself is transport neutral, the
   applications such as the server and client come with different options
   for transport protocol.
   The preferred mode of transport is (OTMessage -> XmlRpc -> HTTP). But
   this is not what is built by default. IF you have the XmlRpc++ library
   installed, you can use 'make rpc' instead of 'make', (or 'make debugrpc'
   instead of 'make debug'), and you can run in the preferred HTTP mode.
   But if you do NOT have that library installed, just use 'make' or 'make debug'
   and use the default transport, which is (OTMessage -> TCP -> SSL).

4) You can *ignore* the ssl folder and the docs/SSL-NOTES.txt file unless 
   you want to wipe and re-create the test certs and keys for the client
   and server. (Not recommended.)

   (I have already created test certs for you for client and server. 
   But if you would like to re-create them, then open docs/SSL_NOTES.txt 
   I explained it all in there.  Otherwise, for testing, you can entirely
   ignore it and use the test keys that I already generated.) 

   THE PASSWORD for ALL the test certs is "test".

5) To run the server, from this folder, type:
       cd transaction; ./transaction.exe

6) To run the test client, from this folder, type:
       cd testwallet; ./testwallet.exe

** password is test (always) 

** More detailed instructions are in the INSTALL.


-------------------------------------------------------------------------


FOLDERS:

--- OTLib. This folder contains the actual library.
    It builds to create libOTLib.a

--- docs. Just extra documentation and notes.

--- ssl. The public/private keys and certs are generated here.
    The various test contracts and user accounts that come with
    this distribution are based on the certs in this folder. Also,
    if you ever need to re-generate them, This's where you'll do it.

--- testwallet. This contains the code for the test client. The same
    code can also be compiled into a high-level API: OTAPI.a
    There are also makefiles here for building the JNI wrapper for
    the OTAPI. This allows you to call the OTAPI from Java (see the
    supplied Java class.) It also allows you to use Open Transactions
    with JRuby, Groove, Jython, etc.

--- transaction. This folder contains the server.

--- util. This folder contains various utilities, for generating mints
    and signing contracts.


